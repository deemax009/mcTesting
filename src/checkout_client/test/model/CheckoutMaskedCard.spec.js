/**
 * Checkout, Save Card On File, Delete Saved Card On File And Confirmations API
 *  Click to Pay checkout used by Merchants to receive payload data from the Click to Pay System and send the results of transaction authorisation back to the Click to Pay System. Endpoints are available to retrieve payload data and send the outcome of a payment or checkout. 
 *
 * The version of the OpenAPI document: 1.3.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi);
  }
}(this, function(expect, CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CheckoutMaskedCard', function() {
    it('should create an instance of CheckoutMaskedCard', function() {
      // uncomment below and update the code to test CheckoutMaskedCard
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be.a(CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard);
    });

    it('should have the property srcDigitalCardId (base name: "srcDigitalCardId")', function() {
      // uncomment below and update the code to test the property srcDigitalCardId
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property panBin (base name: "panBin")', function() {
      // uncomment below and update the code to test the property panBin
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property panLastFour (base name: "panLastFour")', function() {
      // uncomment below and update the code to test the property panLastFour
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property digitalCardData (base name: "digitalCardData")', function() {
      // uncomment below and update the code to test the property digitalCardData
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property panExpirationMonth (base name: "panExpirationMonth")', function() {
      // uncomment below and update the code to test the property panExpirationMonth
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property panExpirationYear (base name: "panExpirationYear")', function() {
      // uncomment below and update the code to test the property panExpirationYear
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property maskedCardholderFullName (base name: "maskedCardholderFullName")', function() {
      // uncomment below and update the code to test the property maskedCardholderFullName
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property maskedCardholderFirstName (base name: "maskedCardholderFirstName")', function() {
      // uncomment below and update the code to test the property maskedCardholderFirstName
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property maskedCardholderLastName (base name: "maskedCardholderLastName")', function() {
      // uncomment below and update the code to test the property maskedCardholderLastName
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property paymentCardDescriptor (base name: "paymentCardDescriptor")', function() {
      // uncomment below and update the code to test the property paymentCardDescriptor
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property paymentCardType (base name: "paymentCardType")', function() {
      // uncomment below and update the code to test the property paymentCardType
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property digitalCardFeatures (base name: "digitalCardFeatures")', function() {
      // uncomment below and update the code to test the property digitalCardFeatures
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

    it('should have the property maskedBillingAddress (base name: "maskedBillingAddress")', function() {
      // uncomment below and update the code to test the property maskedBillingAddress
      //var instance = new CheckoutSaveCardOnFileDeleteSavedCardOnFileAndConfirmationsApi.CheckoutMaskedCard();
      //expect(instance).to.be();
    });

  });

}));
