/**
 * Mastercard Checkout Solutions Merchant Registration API
 * Registration APIs for Mastercard Checkout Solutions to submit new DPA data or check status of an existing uploaded batch
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DpaAddUpdateRequest from '../model/DpaAddUpdateRequest';
import DpaAddUpdateResponse from '../model/DpaAddUpdateResponse';
import DpaBatchStatus from '../model/DpaBatchStatus';
import Error from '../model/Error';

/**
* MerchantRegistration service.
* @module api/MerchantRegistrationApi
* @version 1.0.0
*/
export default class MerchantRegistrationApi {

    /**
    * Constructs a new MerchantRegistrationApi. 
    * @alias module:api/MerchantRegistrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bulkAddUpdateDpa operation.
     * @callback module:api/MerchantRegistrationApi~bulkAddUpdateDpaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DpaAddUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Asynchronous - DPA bulk Add/Update/Delete
     * This is a composite API and performs the following functions in a single call.   * ADD -- Add the DPA record.  * UPDATE -- Update the DPA record.  * DELETE --Delete the DPA record   Additionally, this request can be used to generate serviceIds in Commerce Platform use cases.   A Digital Payment Application (DPA) is a website, web or mobile application operated by a Merchant, marketplace, or other service provider where a consumer can purchase goods or services.   A ServiceId is a unique identifier assigned by Mastercard for which tokens are created uniquely for the entity onboarded. A serviceId can have multiple associated DPAs.  This request must contain the following values, for detail please refer to the Body Model description::     * items    * action    * programType   The contents of the DPA items will vary based on the operation requested.  Notes:  * For UPDATE operations, only DPA data are updated. Once registered, a DPA cannot be associated with a new serviceId or programType. A new DPA will need to be ADDed for each programType/serviceId. * It is recommended to provide **either** ADD **or** UPDATE across different items within the same batch of DPA Registration API. 
     * @param {String} correlationId A unique identifier that correlates a series of two or more requests to a single session of activity. Mastercard Checkout Solutions (MCS) will return a new srcCorrelationId in each response by default, but Integrators may choose to populate previously used srcCorrelationIds in subsequent requests to correlate their activity under a single ID. This can be done by providing a Mastercard generated srcCorrelationId in the request, or by generating your own ID in the same format. SrcCorrelationId is used for tracking and troubleshooting purposes within Mastercard's ecosystem.
     * @param {String} srcClientId A unique identifier assigned by Mastercard during onboarding which signifies the responsible party Integrating to Mastercard Checkout Solutions (MCS).
     * @param {module:model/DpaAddUpdateRequest} dpaAddUpdateRequest DPA asynchronous/bulk Registration Request
     * @param {module:api/MerchantRegistrationApi~bulkAddUpdateDpaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DpaAddUpdateResponse}
     */
    bulkAddUpdateDpa(correlationId, srcClientId, dpaAddUpdateRequest, callback) {
      let postBody = dpaAddUpdateRequest;
      // verify the required parameter 'correlationId' is set
      if (correlationId === undefined || correlationId === null) {
        throw new Error("Missing the required parameter 'correlationId' when calling bulkAddUpdateDpa");
      }
      // verify the required parameter 'srcClientId' is set
      if (srcClientId === undefined || srcClientId === null) {
        throw new Error("Missing the required parameter 'srcClientId' when calling bulkAddUpdateDpa");
      }
      // verify the required parameter 'dpaAddUpdateRequest' is set
      if (dpaAddUpdateRequest === undefined || dpaAddUpdateRequest === null) {
        throw new Error("Missing the required parameter 'dpaAddUpdateRequest' when calling bulkAddUpdateDpa");
      }

      let pathParams = {
        'src-client-id': srcClientId
      };
      let queryParams = {
      };
      let headerParams = {
        'correlation-id': correlationId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DpaAddUpdateResponse;
      return this.apiClient.callApi(
        '/srci/{src-client-id}/dpas/batch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDpaBatchStatus operation.
     * @callback module:api/MerchantRegistrationApi~getDpaBatchStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DpaBatchStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get status of the DPA Add/Update async (batch) job by Batch ID.
     * The GET Status API allows the SRC Initiator to retrieve the status of a DPA Registration request submitted earlier.
     * @param {String} correlationId A unique identifier that correlates a series of two or more requests to a single session of activity. Mastercard Checkout Solutions (MCS) will return a new srcCorrelationId in each response by default, but Integrators may choose to populate previously used srcCorrelationIds in subsequent requests to correlate their activity under a single ID. This can be done by providing a Mastercard generated srcCorrelationId in the request, or by generating your own ID in the same format. SrcCorrelationId is used for tracking and troubleshooting purposes within Mastercard's ecosystem.
     * @param {String} srcClientId A unique identifier assigned by Mastercard during onboarding which signifies the responsible party Integrating to Mastercard Checkout Solutions (MCS).
     * @param {String} batchId A unique identifier associated with the submitted Digital Payment Application (DPA) batch. The Batch ID can be used to retrieve the status of the batch by calling GET DPA status endpoint.
     * @param {module:api/MerchantRegistrationApi~getDpaBatchStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DpaBatchStatus}
     */
    getDpaBatchStatus(correlationId, srcClientId, batchId, callback) {
      let postBody = null;
      // verify the required parameter 'correlationId' is set
      if (correlationId === undefined || correlationId === null) {
        throw new Error("Missing the required parameter 'correlationId' when calling getDpaBatchStatus");
      }
      // verify the required parameter 'srcClientId' is set
      if (srcClientId === undefined || srcClientId === null) {
        throw new Error("Missing the required parameter 'srcClientId' when calling getDpaBatchStatus");
      }
      // verify the required parameter 'batchId' is set
      if (batchId === undefined || batchId === null) {
        throw new Error("Missing the required parameter 'batchId' when calling getDpaBatchStatus");
      }

      let pathParams = {
        'src-client-id': srcClientId,
        'batch-id': batchId
      };
      let queryParams = {
      };
      let headerParams = {
        'correlation-id': correlationId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DpaBatchStatus;
      return this.apiClient.callApi(
        '/srci/{src-client-id}/dpas/batch/status/{batch-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
