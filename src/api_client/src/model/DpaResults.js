/**
 * Mastercard Checkout Solutions Merchant Registration API
 * Registration APIs for Mastercard Checkout Solutions to submit new DPA data or check status of an existing uploaded batch
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';

/**
 * The DpaResults model module.
 * @module model/DpaResults
 * @version 1.0.0
 */
class DpaResults {
    /**
     * Constructs a new <code>DpaResults</code>.
     * Object for individual Digital Payment Application (DPA) item status data.
     * @alias module:model/DpaResults
     */
    constructor() { 
        
        DpaResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DpaResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DpaResults} obj Optional instance to populate.
     * @return {module:model/DpaResults} The populated <code>DpaResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DpaResults();

            if (data.hasOwnProperty('srcDpaId')) {
                obj['srcDpaId'] = ApiClient.convertToType(data['srcDpaId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('dpaName')) {
                obj['dpaName'] = ApiClient.convertToType(data['dpaName'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Error.constructFromObject(data['error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DpaResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DpaResults</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['srcDpaId'] && !(typeof data['srcDpaId'] === 'string' || data['srcDpaId'] instanceof String)) {
            throw new Error("Expected the field `srcDpaId` to be a primitive type in the JSON string but got " + data['srcDpaId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['dpaName'] && !(typeof data['dpaName'] === 'string' || data['dpaName'] instanceof String)) {
            throw new Error("Expected the field `dpaName` to be a primitive type in the JSON string but got " + data['dpaName']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Error.validateJSON(data['error']);
        }

        return true;
    }


}



/**
 * The registered identifier for the Digital Payment Application (DPA) accessing the service.  Conditional: Required if you are a Merchant directly integrating with Mastercard Checkout Solutions (MCS) APIs, a Payment Service Provider (PSP) integrating On-Behalf-Of (OBO) a Merchant, a Payment Facilitator, or if you are enrolling in the Secure Card on File (SCOF) QR program. 
 * @member {String} srcDpaId
 */
DpaResults.prototype['srcDpaId'] = undefined;

/**
 * Status of the individual Digital Payment Application (DPA) item. Potential statuses include:  * SUCCESSFUL - The DPA is eligible to process transactions.  * FAILED - The DPA is NOT eligible to process transactions. Please see the error object for more details.\" 
 * @member {module:model/DpaResults.StatusEnum} status
 */
DpaResults.prototype['status'] = undefined;

/**
 * Legal name of Merchant (which may differ from dpaPresentationName).
 * @member {String} dpaName
 */
DpaResults.prototype['dpaName'] = undefined;

/**
 * @member {module:model/Error} error
 */
DpaResults.prototype['error'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DpaResults['StatusEnum'] = {

    /**
     * value: "SUCCESSFUL"
     * @const
     */
    "SUCCESSFUL": "SUCCESSFUL",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default DpaResults;

