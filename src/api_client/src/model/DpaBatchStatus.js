/**
 * Mastercard Checkout Solutions Merchant Registration API
 * Registration APIs for Mastercard Checkout Solutions to submit new DPA data or check status of an existing uploaded batch
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchStatusItems from './BatchStatusItems';

/**
 * The DpaBatchStatus model module.
 * @module model/DpaBatchStatus
 * @version 1.0.0
 */
class DpaBatchStatus {
    /**
     * Constructs a new <code>DpaBatchStatus</code>.
     * The DpaBatchStatus response contains information related to the status of a submitted Digital Payment Application (DPA) batch.
     * @alias module:model/DpaBatchStatus
     */
    constructor() { 
        
        DpaBatchStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DpaBatchStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DpaBatchStatus} obj Optional instance to populate.
     * @return {module:model/DpaBatchStatus} The populated <code>DpaBatchStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DpaBatchStatus();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('batchId')) {
                obj['batchId'] = ApiClient.convertToType(data['batchId'], 'String');
            }
            if (data.hasOwnProperty('batchStatus')) {
                obj['batchStatus'] = ApiClient.convertToType(data['batchStatus'], 'String');
            }
            if (data.hasOwnProperty('batchStartTime')) {
                obj['batchStartTime'] = ApiClient.convertToType(data['batchStartTime'], 'String');
            }
            if (data.hasOwnProperty('batchEndTime')) {
                obj['batchEndTime'] = ApiClient.convertToType(data['batchEndTime'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [BatchStatusItems]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DpaBatchStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DpaBatchStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['batchId'] && !(typeof data['batchId'] === 'string' || data['batchId'] instanceof String)) {
            throw new Error("Expected the field `batchId` to be a primitive type in the JSON string but got " + data['batchId']);
        }
        // ensure the json data is a string
        if (data['batchStatus'] && !(typeof data['batchStatus'] === 'string' || data['batchStatus'] instanceof String)) {
            throw new Error("Expected the field `batchStatus` to be a primitive type in the JSON string but got " + data['batchStatus']);
        }
        // ensure the json data is a string
        if (data['batchStartTime'] && !(typeof data['batchStartTime'] === 'string' || data['batchStartTime'] instanceof String)) {
            throw new Error("Expected the field `batchStartTime` to be a primitive type in the JSON string but got " + data['batchStartTime']);
        }
        // ensure the json data is a string
        if (data['batchEndTime'] && !(typeof data['batchEndTime'] === 'string' || data['batchEndTime'] instanceof String)) {
            throw new Error("Expected the field `batchEndTime` to be a primitive type in the JSON string but got " + data['batchEndTime']);
        }
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                BatchStatusItems.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This field allows the Integrator to assign an internal reference to a batch request so that it can be used for internal tracking purposes.
 * @member {String} requestId
 */
DpaBatchStatus.prototype['requestId'] = undefined;

/**
 * A unique identifier associated with the submitted Digital Payment Application (DPA) batch. The Batch ID can be used to retrieve the status of the batch by calling GET DPA status endpoint.
 * @member {String} batchId
 */
DpaBatchStatus.prototype['batchId'] = undefined;

/**
 * Describes the outcome of the submitted Digital Payment Application (DPA) batch. Possible outcomes include:  * COMPLETED_SUCCESSFULLY - Batch was completed successfully and all DPAs included in the batch are ready to transact.  * COMPLETED_WITH_ERRORS - Batch was completed successfully, but some DPAs included in the batch aren't ready to transact.  * FAILED -  Batch failed to load.  * IN_PROGRESS - Batch processing in progress.  For a full breakdown of all DPA outcomes in a batch, refer to the items. 
 * @member {module:model/DpaBatchStatus.BatchStatusEnum} batchStatus
 */
DpaBatchStatus.prototype['batchStatus'] = undefined;

/**
 * Start time of batch request
 * @member {String} batchStartTime
 */
DpaBatchStatus.prototype['batchStartTime'] = undefined;

/**
 * End time of batch request
 * @member {String} batchEndTime
 */
DpaBatchStatus.prototype['batchEndTime'] = undefined;

/**
 * Provides additional information when batchStatus yields a FAILED status.
 * @member {String} errorMessage
 */
DpaBatchStatus.prototype['errorMessage'] = undefined;

/**
 * An array of status objects that describes the outcome of each Digital Payment Application (DPA) item in a batch request.  Note: DPA item order may differ from original submission.\" 
 * @member {Array.<module:model/BatchStatusItems>} items
 */
DpaBatchStatus.prototype['items'] = undefined;





/**
 * Allowed values for the <code>batchStatus</code> property.
 * @enum {String}
 * @readonly
 */
DpaBatchStatus['BatchStatusEnum'] = {

    /**
     * value: "COMPLETED_SUCCESSFULLY"
     * @const
     */
    "COMPLETED_SUCCESSFULLY": "COMPLETED_SUCCESSFULLY",

    /**
     * value: "COMPLETED_WITH_ERRORS"
     * @const
     */
    "COMPLETED_WITH_ERRORS": "COMPLETED_WITH_ERRORS",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS"
};



export default DpaBatchStatus;

