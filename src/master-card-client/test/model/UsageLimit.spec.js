/**
 * Mastercard Processing Core API
 * OpenAPI Specification for MP (Mastercard Processing) **Core**.  This documentation describes what functionalities are exposed by the MP's CMS (Card Management System) and are available to be used by the Issuer. The Issuer is the primary actor who executes the operations. Whenever the Issuer wishes to onboard its customers to the card program, they may use API to:  * create and manage **client**  * create and manage **contracts**, there are two types of contracts in the MP's CMS:    * **account contract**    * **card contract**  Later, during the card lifecycle, the Issuer can also manage other objects related to the client and the contract (account or card):  * manage **card plastic**  * create, manage and retrieve **additional addresses** (for the client and the contract)  * manage and retrieve **classifiers** (for the client and the contract)  * manage and retrieve **custom data** (for the client and the contract)  * manage and retrieve **parameters** (for the contract)  * set or retrieve **service limit tariff** (for the contract)  * post or retrieve **transactions** (for the contract)  * manage and retrieve **usage limits** (for the contract)  *** API uses RESTful protocol via HTTP to execute POST, PUT, GET and PATCH operations sent to given endpoints, e.g. `/clients`.  API uses JSON Web Encryption compact serialization for payload encryption for all API operations. *** External documentation:   * [ISO 4217 - Currency Codes](https://www.iso.org/iso-4217-currency-codes.html)   * [ISO 3166 - Country Codes](https://www.iso.org/iso-3166-country-codes.html)   * [Internet Engineering Task Force (IETF) BCP 47 standard](https://tools.ietf.org/html/bcp47#appendix-A)   * [JSON Web Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption)   * [Internet Engineering Task Force (IETF) RFC7232](https://datatracker.ietf.org/doc/html/rfc7232)   * [JSON Merge Patch](https://datatracker.ietf.org/doc/html/rfc7386) *** 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MastercardProcessingCoreApi);
  }
}(this, function(expect, MastercardProcessingCoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MastercardProcessingCoreApi.UsageLimit();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsageLimit', function() {
    it('should create an instance of UsageLimit', function() {
      // uncomment below and update the code to test UsageLimit
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be.a(MastercardProcessingCoreApi.UsageLimit);
    });

    it('should have the property activityPeriodStartDate (base name: "activityPeriodStartDate")', function() {
      // uncomment below and update the code to test the property activityPeriodStartDate
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property activityPeriodEndDate (base name: "activityPeriodEndDate")', function() {
      // uncomment below and update the code to test the property activityPeriodEndDate
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property addInfo (base name: "addInfo")', function() {
      // uncomment below and update the code to test the property addInfo
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property currencyNumericCode (base name: "currencyNumericCode")', function() {
      // uncomment below and update the code to test the property currencyNumericCode
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property currentUsage (base name: "currentUsage")', function() {
      // uncomment below and update the code to test the property currentUsage
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property maxAmount (base name: "maxAmount")', function() {
      // uncomment below and update the code to test the property maxAmount
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property maxNumber (base name: "maxNumber")', function() {
      // uncomment below and update the code to test the property maxNumber
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property maxPercent (base name: "maxPercent")', function() {
      // uncomment below and update the code to test the property maxPercent
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property maxSingleAmount (base name: "maxSingleAmount")', function() {
      // uncomment below and update the code to test the property maxSingleAmount
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

    it('should have the property usageLimitCode (base name: "usageLimitCode")', function() {
      // uncomment below and update the code to test the property usageLimitCode
      //var instance = new MastercardProcessingCoreApi.UsageLimit();
      //expect(instance).to.be();
    });

  });

}));
