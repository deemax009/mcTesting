/**
 * Mastercard Processing Core API
 * OpenAPI Specification for MP (Mastercard Processing) **Core**.  This documentation describes what functionalities are exposed by the MP's CMS (Card Management System) and are available to be used by the Issuer. The Issuer is the primary actor who executes the operations. Whenever the Issuer wishes to onboard its customers to the card program, they may use API to:  * create and manage **client**  * create and manage **contracts**, there are two types of contracts in the MP's CMS:    * **account contract**    * **card contract**  Later, during the card lifecycle, the Issuer can also manage other objects related to the client and the contract (account or card):  * manage **card plastic**  * create, manage and retrieve **additional addresses** (for the client and the contract)  * manage and retrieve **classifiers** (for the client and the contract)  * manage and retrieve **custom data** (for the client and the contract)  * manage and retrieve **parameters** (for the contract)  * set or retrieve **service limit tariff** (for the contract)  * post or retrieve **transactions** (for the contract)  * manage and retrieve **usage limits** (for the contract)  *** API uses RESTful protocol via HTTP to execute POST, PUT, GET and PATCH operations sent to given endpoints, e.g. `/clients`.  API uses JSON Web Encryption compact serialization for payload encryption for all API operations. *** External documentation:   * [ISO 4217 - Currency Codes](https://www.iso.org/iso-4217-currency-codes.html)   * [ISO 3166 - Country Codes](https://www.iso.org/iso-3166-country-codes.html)   * [Internet Engineering Task Force (IETF) BCP 47 standard](https://tools.ietf.org/html/bcp47#appendix-A)   * [JSON Web Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption)   * [Internet Engineering Task Force (IETF) RFC7232](https://datatracker.ietf.org/doc/html/rfc7232)   * [JSON Merge Patch](https://datatracker.ietf.org/doc/html/rfc7386) *** 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MastercardProcessingCoreApi);
  }
}(this, function(expect, MastercardProcessingCoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MastercardProcessingCoreApi.ContractTariff();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContractTariff', function() {
    it('should create an instance of ContractTariff', function() {
      // uncomment below and update the code to test ContractTariff
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be.a(MastercardProcessingCoreApi.ContractTariff);
    });

    it('should have the property applyMode (base name: "applyMode")', function() {
      // uncomment below and update the code to test the property applyMode
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property activeTariffDataId (base name: "activeTariffDataId")', function() {
      // uncomment below and update the code to test the property activeTariffDataId
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property baseAmount (base name: "baseAmount")', function() {
      // uncomment below and update the code to test the property baseAmount
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contractId")', function() {
      // uncomment below and update the code to test the property contractId
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property currencyNumericCode (base name: "currencyNumericCode")', function() {
      // uncomment below and update the code to test the property currencyNumericCode
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property domainFrom (base name: "domainFrom")', function() {
      // uncomment below and update the code to test the property domainFrom
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property domainLevel (base name: "domainLevel")', function() {
      // uncomment below and update the code to test the property domainLevel
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property domainName (base name: "domainName")', function() {
      // uncomment below and update the code to test the property domainName
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property duePeriod (base name: "duePeriod")', function() {
      // uncomment below and update the code to test the property duePeriod
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property feeRateValue (base name: "feeRateValue")', function() {
      // uncomment below and update the code to test the property feeRateValue
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property fxRateType (base name: "fxRateType")', function() {
      // uncomment below and update the code to test the property fxRateType
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property generalLedgerNumber (base name: "generalLedgerNumber")', function() {
      // uncomment below and update the code to test the property generalLedgerNumber
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property generalLedgerNumberName (base name: "generalLedgerNumberName")', function() {
      // uncomment below and update the code to test the property generalLedgerNumberName
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property globalTariffId (base name: "globalTariffId")', function() {
      // uncomment below and update the code to test the property globalTariffId
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property gracePeriod (base name: "gracePeriod")', function() {
      // uncomment below and update the code to test the property gracePeriod
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property minCount (base name: "minCount")', function() {
      // uncomment below and update the code to test the property minCount
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property maxCount (base name: "maxCount")', function() {
      // uncomment below and update the code to test the property maxCount
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property maxAmount (base name: "maxAmount")', function() {
      // uncomment below and update the code to test the property maxAmount
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property minAmount (base name: "minAmount")', function() {
      // uncomment below and update the code to test the property minAmount
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property personalisationType (base name: "personalisationType")', function() {
      // uncomment below and update the code to test the property personalisationType
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property personalTariffId (base name: "personalTariffId")', function() {
      // uncomment below and update the code to test the property personalTariffId
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property rateValue (base name: "rateValue")', function() {
      // uncomment below and update the code to test the property rateValue
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property singleAmount (base name: "singleAmount")', function() {
      // uncomment below and update the code to test the property singleAmount
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffCode (base name: "tariffCode")', function() {
      // uncomment below and update the code to test the property tariffCode
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffDomainId (base name: "tariffDomainId")', function() {
      // uncomment below and update the code to test the property tariffDomainId
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffDomainCode (base name: "tariffDomainCode")', function() {
      // uncomment below and update the code to test the property tariffDomainCode
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffId (base name: "tariffId")', function() {
      // uncomment below and update the code to test the property tariffId
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffName (base name: "tariffName")', function() {
      // uncomment below and update the code to test the property tariffName
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffRole (base name: "tariffRole")', function() {
      // uncomment below and update the code to test the property tariffRole
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffStartDate (base name: "tariffStartDate")', function() {
      // uncomment below and update the code to test the property tariffStartDate
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffTypeCode (base name: "tariffTypeCode")', function() {
      // uncomment below and update the code to test the property tariffTypeCode
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffTypeName (base name: "tariffTypeName")', function() {
      // uncomment below and update the code to test the property tariffTypeName
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property tariffValue (base name: "tariffValue")', function() {
      // uncomment below and update the code to test the property tariffValue
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

    it('should have the property volumeBased (base name: "volumeBased")', function() {
      // uncomment below and update the code to test the property volumeBased
      //var instance = new MastercardProcessingCoreApi.ContractTariff();
      //expect(instance).to.be();
    });

  });

}));
