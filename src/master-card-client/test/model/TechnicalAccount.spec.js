/**
 * Mastercard Processing Core API
 * OpenAPI Specification for MP (Mastercard Processing) **Core**.  This documentation describes what functionalities are exposed by the MP's CMS (Card Management System) and are available to be used by the Issuer. The Issuer is the primary actor who executes the operations. Whenever the Issuer wishes to onboard its customers to the card program, they may use API to:  * create and manage **client**  * create and manage **contracts**, there are two types of contracts in the MP's CMS:    * **account contract**    * **card contract**  Later, during the card lifecycle, the Issuer can also manage other objects related to the client and the contract (account or card):  * manage **card plastic**  * create, manage and retrieve **additional addresses** (for the client and the contract)  * manage and retrieve **classifiers** (for the client and the contract)  * manage and retrieve **custom data** (for the client and the contract)  * manage and retrieve **parameters** (for the contract)  * set or retrieve **service limit tariff** (for the contract)  * post or retrieve **transactions** (for the contract)  * manage and retrieve **usage limits** (for the contract)  *** API uses RESTful protocol via HTTP to execute POST, PUT, GET and PATCH operations sent to given endpoints, e.g. `/clients`.  API uses JSON Web Encryption compact serialization for payload encryption for all API operations. *** External documentation:   * [ISO 4217 - Currency Codes](https://www.iso.org/iso-4217-currency-codes.html)   * [ISO 3166 - Country Codes](https://www.iso.org/iso-3166-country-codes.html)   * [Internet Engineering Task Force (IETF) BCP 47 standard](https://tools.ietf.org/html/bcp47#appendix-A)   * [JSON Web Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption)   * [Internet Engineering Task Force (IETF) RFC7232](https://datatracker.ietf.org/doc/html/rfc7232)   * [JSON Merge Patch](https://datatracker.ietf.org/doc/html/rfc7386) *** 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MastercardProcessingCoreApi);
  }
}(this, function(expect, MastercardProcessingCoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MastercardProcessingCoreApi.TechnicalAccount();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TechnicalAccount', function() {
    it('should create an instance of TechnicalAccount', function() {
      // uncomment below and update the code to test TechnicalAccount
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be.a(MastercardProcessingCoreApi.TechnicalAccount);
    });

    it('should have the property accountTemplateId (base name: "accountTemplateId")', function() {
      // uncomment below and update the code to test the property accountTemplateId
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property accountTemplateName (base name: "accountTemplateName")', function() {
      // uncomment below and update the code to test the property accountTemplateName
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property ageingPriority (base name: "ageingPriority")', function() {
      // uncomment below and update the code to test the property ageingPriority
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property ageingTechnicalAccountId (base name: "ageingTechnicalAccountId")', function() {
      // uncomment below and update the code to test the property ageingTechnicalAccountId
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property ageingTechnicalAccountName (base name: "ageingTechnicalAccountName")', function() {
      // uncomment below and update the code to test the property ageingTechnicalAccountName
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property analyticNumber (base name: "analyticNumber")', function() {
      // uncomment below and update the code to test the property analyticNumber
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property balance (base name: "balance")', function() {
      // uncomment below and update the code to test the property balance
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property billingCycleNumber (base name: "billingCycleNumber")', function() {
      // uncomment below and update the code to test the property billingCycleNumber
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contractId")', function() {
      // uncomment below and update the code to test the property contractId
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property contractNumber (base name: "contractNumber")', function() {
      // uncomment below and update the code to test the property contractNumber
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property currencyNumericCode (base name: "currencyNumericCode")', function() {
      // uncomment below and update the code to test the property currencyNumericCode
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property dueType (base name: "dueType")', function() {
      // uncomment below and update the code to test the property dueType
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property inAmountAvailable (base name: "inAmountAvailable")', function() {
      // uncomment below and update the code to test the property inAmountAvailable
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property interestFeeRate (base name: "interestFeeRate")', function() {
      // uncomment below and update the code to test the property interestFeeRate
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property interestRate (base name: "interestRate")', function() {
      // uncomment below and update the code to test the property interestRate
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property interestTechnicalAccountId (base name: "interestTechnicalAccountId")', function() {
      // uncomment below and update the code to test the property interestTechnicalAccountId
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property interestTechnicalAccountName (base name: "interestTechnicalAccountName")', function() {
      // uncomment below and update the code to test the property interestTechnicalAccountName
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property lowerLimit (base name: "lowerLimit")', function() {
      // uncomment below and update the code to test the property lowerLimit
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property overLimitTechnicalAccountId (base name: "overLimitTechnicalAccountId")', function() {
      // uncomment below and update the code to test the property overLimitTechnicalAccountId
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property overLimitTechnicalAccountName (base name: "overLimitTechnicalAccountName")', function() {
      // uncomment below and update the code to test the property overLimitTechnicalAccountName
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property ownBlockedAmount (base name: "ownBlockedAmount")', function() {
      // uncomment below and update the code to test the property ownBlockedAmount
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property paymentPriority (base name: "paymentPriority")', function() {
      // uncomment below and update the code to test the property paymentPriority
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property startBalance (base name: "startBalance")', function() {
      // uncomment below and update the code to test the property startBalance
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property syntheticNumber (base name: "syntheticNumber")', function() {
      // uncomment below and update the code to test the property syntheticNumber
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property technicalAccountId (base name: "technicalAccountId")', function() {
      // uncomment below and update the code to test the property technicalAccountId
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property technicalAccountCode (base name: "technicalAccountCode")', function() {
      // uncomment below and update the code to test the property technicalAccountCode
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property technicalAccountName (base name: "technicalAccountName")', function() {
      // uncomment below and update the code to test the property technicalAccountName
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property technicalAccountType (base name: "technicalAccountType")', function() {
      // uncomment below and update the code to test the property technicalAccountType
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property totalBlockedAmount (base name: "totalBlockedAmount")', function() {
      // uncomment below and update the code to test the property totalBlockedAmount
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

    it('should have the property upperLimit (base name: "upperLimit")', function() {
      // uncomment below and update the code to test the property upperLimit
      //var instance = new MastercardProcessingCoreApi.TechnicalAccount();
      //expect(instance).to.be();
    });

  });

}));
