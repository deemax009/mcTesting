/**
 * Mastercard Processing Core API
 * OpenAPI Specification for MP (Mastercard Processing) **Core**.  This documentation describes what functionalities are exposed by the MP's CMS (Card Management System) and are available to be used by the Issuer. The Issuer is the primary actor who executes the operations. Whenever the Issuer wishes to onboard its customers to the card program, they may use API to:  * create and manage **client**  * create and manage **contracts**, there are two types of contracts in the MP's CMS:    * **account contract**    * **card contract**  Later, during the card lifecycle, the Issuer can also manage other objects related to the client and the contract (account or card):  * manage **card plastic**  * create, manage and retrieve **additional addresses** (for the client and the contract)  * manage and retrieve **classifiers** (for the client and the contract)  * manage and retrieve **custom data** (for the client and the contract)  * manage and retrieve **parameters** (for the contract)  * set or retrieve **service limit tariff** (for the contract)  * post or retrieve **transactions** (for the contract)  * manage and retrieve **usage limits** (for the contract)  *** API uses RESTful protocol via HTTP to execute POST, PUT, GET and PATCH operations sent to given endpoints, e.g. `/clients`.  API uses JSON Web Encryption compact serialization for payload encryption for all API operations. *** External documentation:   * [ISO 4217 - Currency Codes](https://www.iso.org/iso-4217-currency-codes.html)   * [ISO 3166 - Country Codes](https://www.iso.org/iso-3166-country-codes.html)   * [Internet Engineering Task Force (IETF) BCP 47 standard](https://tools.ietf.org/html/bcp47#appendix-A)   * [JSON Web Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption)   * [Internet Engineering Task Force (IETF) RFC7232](https://datatracker.ietf.org/doc/html/rfc7232)   * [JSON Merge Patch](https://datatracker.ietf.org/doc/html/rfc7386) *** 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MastercardProcessingCoreApi);
  }
}(this, function(expect, MastercardProcessingCoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MastercardProcessingCoreApi.ContractFinancial();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContractFinancial', function() {
    it('should create an instance of ContractFinancial', function() {
      // uncomment below and update the code to test ContractFinancial
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be.a(MastercardProcessingCoreApi.ContractFinancial);
    });

    it('should have the property additionalCreditLimit (base name: "additionalCreditLimit")', function() {
      // uncomment below and update the code to test the property additionalCreditLimit
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property additionalCreditLimitEffectiveDate (base name: "additionalCreditLimitEffectiveDate")', function() {
      // uncomment below and update the code to test the property additionalCreditLimitEffectiveDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property additionalCreditLimitExpiryDate (base name: "additionalCreditLimitExpiryDate")', function() {
      // uncomment below and update the code to test the property additionalCreditLimitExpiryDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property amendmentDate (base name: "amendmentDate")', function() {
      // uncomment below and update the code to test the property amendmentDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property availableAmount (base name: "availableAmount")', function() {
      // uncomment below and update the code to test the property availableAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property balance (base name: "balance")', function() {
      // uncomment below and update the code to test the property balance
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property blockedAmount (base name: "blockedAmount")', function() {
      // uncomment below and update the code to test the property blockedAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contractId")', function() {
      // uncomment below and update the code to test the property contractId
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property creditLimit (base name: "creditLimit")', function() {
      // uncomment below and update the code to test the property creditLimit
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property creditLimitEffectiveDate (base name: "creditLimitEffectiveDate")', function() {
      // uncomment below and update the code to test the property creditLimitEffectiveDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property currencyNumericCode (base name: "currencyNumericCode")', function() {
      // uncomment below and update the code to test the property currencyNumericCode
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property currentDueAmount (base name: "currentDueAmount")', function() {
      // uncomment below and update the code to test the property currentDueAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property delinquencyHistory (base name: "delinquencyHistory")', function() {
      // uncomment below and update the code to test the property delinquencyHistory
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property disputeAmount (base name: "disputeAmount")', function() {
      // uncomment below and update the code to test the property disputeAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property graceDate (base name: "graceDate")', function() {
      // uncomment below and update the code to test the property graceDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property lastPaymentAmount (base name: "lastPaymentAmount")', function() {
      // uncomment below and update the code to test the property lastPaymentAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property lastPaymentDate (base name: "lastPaymentDate")', function() {
      // uncomment below and update the code to test the property lastPaymentDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property mainContractId (base name: "mainContractId")', function() {
      // uncomment below and update the code to test the property mainContractId
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property mainContractNumber (base name: "mainContractNumber")', function() {
      // uncomment below and update the code to test the property mainContractNumber
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property overlimitAmount (base name: "overlimitAmount")', function() {
      // uncomment below and update the code to test the property overlimitAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property parentContractId (base name: "parentContractId")', function() {
      // uncomment below and update the code to test the property parentContractId
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property parentContractNumber (base name: "parentContractNumber")', function() {
      // uncomment below and update the code to test the property parentContractNumber
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property pastDueAmount (base name: "pastDueAmount")', function() {
      // uncomment below and update the code to test the property pastDueAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property pastDueDate (base name: "pastDueDate")', function() {
      // uncomment below and update the code to test the property pastDueDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property pastDueDays (base name: "pastDueDays")', function() {
      // uncomment below and update the code to test the property pastDueDays
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property previousCreditLimit (base name: "previousCreditLimit")', function() {
      // uncomment below and update the code to test the property previousCreditLimit
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property previousCreditLimitEffectiveDate (base name: "previousCreditLimitEffectiveDate")', function() {
      // uncomment below and update the code to test the property previousCreditLimitEffectiveDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property temporaryCreditLimit (base name: "temporaryCreditLimit")', function() {
      // uncomment below and update the code to test the property temporaryCreditLimit
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property temporaryCreditLimitEffectiveDate (base name: "temporaryCreditLimitEffectiveDate")', function() {
      // uncomment below and update the code to test the property temporaryCreditLimitEffectiveDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property temporaryCreditLimitExpiryDate (base name: "temporaryCreditLimitExpiryDate")', function() {
      // uncomment below and update the code to test the property temporaryCreditLimitExpiryDate
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

    it('should have the property totalDueAmount (base name: "totalDueAmount")', function() {
      // uncomment below and update the code to test the property totalDueAmount
      //var instance = new MastercardProcessingCoreApi.ContractFinancial();
      //expect(instance).to.be();
    });

  });

}));
